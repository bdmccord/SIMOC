version: '3.6'
services:
  nginx:
    image: nginx:1.25-alpine
    {% if use_certbot %}
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    {% endif %}
    restart: always
    ports:
      - '${HTTP_PORT}:${HTTP_PORT}'
      {% if use_ssl %}
      - '${HTTPS_PORT}:${HTTPS_PORT}'
      {% endif %}
    networks:
      - simoc-net
    volumes:
      - ./nginx/simoc_nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/proxy_params:/etc/nginx/proxy_params
      - ./nginx/proxy_ws_params:/etc/nginx/proxy_ws_params
      {% if use_ssl %}
      {% if use_certbot %}
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      {% else %}
      - ./certs:/etc/nginx/certs
      {% endif %}
      {% endif %}
      {% if add_basic_auth %}
      - ./nginx/htpasswd:/etc/nginx/htpasswd
      {% endif %}
    depends_on:
      - flask-app
  {% if use_ssl %}
  {% if use_certbot %}
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
  {% endif %}
  {% endif %}
  simoc-db:
    image: mysql/mysql-server
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - '${DB_PORT}:${DB_PORT}'
    networks:
      - simoc-net
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
  redis:
    {% if redis_use_bitnami %}
    image: bitnami/redis:latest
    {% else %}
    image: redis:7.0-alpine
    {% endif %}
    restart: always
    ports:
      - 6379:6379
    networks:
      - simoc-net
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    {% if not redis_use_bitnami %}
    command: ["sh", "-c", 'docker-entrypoint.sh --requirepass $REDIS_PASSWORD']
    {% endif %}
  celery-worker:
    {% if use_dockerhub %}
    image: {{ docker_repo }}/simoc_celery:{{ version }}
    {% else %}
    image: simoc_celery:{{ version }}
    {% endif %}
    restart: always
    scale: ${CELERY_WORKERS}
    networks:
      - simoc-net
    healthcheck:
      test: ['CMD', 'bash', 'ping_worker.sh']
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DB_TYPE: ${DB_TYPE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - simoc-db
      - redis
  flask-app:
    {% if use_dockerhub %}
    image: {{ docker_repo }}/simoc_flask:{{ version }}
    {% else %}
    image: simoc_flask:{{ version }}
    {% endif %}
    restart: always
    scale: ${FLASK_WORKERS}
    ports:
      - 8080
    networks:
      - simoc-net
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/ping']
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DB_TYPE: ${DB_TYPE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      FLASK_SECRET: ${FLASK_SECRET}
    depends_on:
      - simoc-db
      - redis
  {% if use_node_dev %}
  node-dev:
    image: {{ docker_repo }}/node_dev:latest
    restart: always
    ports:
      - 9080:8080
    networks:
      - simoc-net
    volumes:
      - {{ node_dev_dir }}:/frontend
    depends_on:
      - nginx
  {% endif %}

volumes:
  db-data: {}

networks:
  simoc-net:
