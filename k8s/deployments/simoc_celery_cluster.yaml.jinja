apiVersion: apps/v1
kind: Deployment
metadata:
  name: simoc-celery-cluster
  labels:
    app: simoc-celery-cluster
spec:
  replicas: {{ min_celery_replicas }}
  selector:
    matchLabels:
      app: simoc-celery-cluster
  template:
    metadata:
      labels:
        app: simoc-celery-cluster
        track: stable
    spec:
      containers:
        - name: simoc-celery-cluster
          image: gcr.io/{{ gcp_project_id }}/simoc_celery:{{ version }}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - bash
                - ping_worker.sh
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 5
            initialDelaySeconds: 30
          env:
          - name: DB_TYPE
            valueFrom:
              configMapKeyRef:
                name: simoc-db-config
                key: db_type
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: simoc-db-config
                key: db_host
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: simoc-db-config
                key: db_port
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: simoc-db-config
                key: db_name
          - name: DB_USER
            valueFrom:
              configMapKeyRef:
                name: simoc-db-config
                key: db_user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: simoc-db-creds
                key: db_password
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                name: redis-config
                key: redis_host
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                name: redis-config
                key: redis_port
          {% if redis_use_password %}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis-creds
                key: redis_password
          {% endif %}
          resources:
            requests:
              memory: "300M"
              cpu: .5
            limits:
              memory: "1G"
              cpu: .7
